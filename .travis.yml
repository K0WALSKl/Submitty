language: php
sudo: true
dist: bionic

cache:
  pip: true
  directories:
    - ${HOME}/.composer/cache
    - ${HOME}/.cache/pip

# We use build stages (https://docs.travis-ci.com/user/build-stages/) to allow us to
# create a matrix of firstly building and testing various PHP targets in several ways
# (lint, unit test, e2e test) and then test out various C++ compilers to ensure our
# best compatibility.
jobs:
  fast_finish: true

  include:
    # Warm up the pip and composer caches to use it for the rest of the build stages
    - &00-cache
      stage: 00 warm up cache
      php: 7.2
      before_install: source ${TRAVIS_BUILD_DIR}/.setup/travis/before_install.sh
      install:
        - pushd site
        - travis_retry composer install --prefer-dist --no-interaction
        - popd
        - pip3 install -U pip
        - pip3 install python-pam
        - pip3 install PyYAML
        - pip3 install psycopg2-binary
        - pip3 install sqlalchemy
        - pip3 install python-dateutil
        - pip3 install --pre selenium
        - pip3 install pause
        - pip3 install tzlocal
        - pip3 install paramiko
        - pip3 install psutil
        - pip3 install jsonschema
        - pip3 install jsonref
        - pip3 install docker
      script: skip

    - &03-e2e
      stage: 03 e2e test
      php: 7.2
      env: AUTH_METHOD=1
      services:
        - xvfb
        - docker
      addons:
        chrome: stable
        postgresql: "10"
        apt:
          sources:
            - sourceline: "deb http://archive.ubuntu.com/ubuntu bionic multiverse"
            - sourceline: "deb http://archive.ubuntu.com/ubuntu bionic-updates multiverse"
          packages:
            - apache2
            - apache2-suexec-custom
            - libapache2-mod-authnz-external
            - libapache2-mod-authz-unixgroup
            - libapache2-mod-wsgi-py3
            - build-essential
            - automake
            - cmake
            - clang
            - g++-multilib
            - libseccomp2
            - seccomp
            - libseccomp-dev
            - valgrind
            - pkg-config
            - flex
            - bison
            - poppler-utils
            - libpcre3
            - libpcre3-dev
            - unzip
            - google-chrome-stable
            - libpam-passwdqc
            - libboost-all-dev
            - jq
      before_install:
        - source ${TRAVIS_BUILD_DIR}/.setup/travis/before_install.sh
        - phpenv config-rm xdebug.ini
      install:
        - pecl install ds
        - yes | pecl install imagick
        - PHP_VERSION=${TRAVIS_PHP_VERSION:0:3}
        - sudo add-apt-repository -y ppa:ondrej/php
        - sudo apt-get -qq update
        - sudo apt-get -y install php${PHP_VERSION}-fpm php${PHP_VERSION}-pgsql php${PHP_VERSION}-curl php${PHP_VERSION}-ds
        - pip3 install -U pip
        - pip3 install python-pam
        - pip3 install PyYAML
        - pip3 install psycopg2-binary
        - pip3 install sqlalchemy
        - pip3 install python-dateutil
        - pip3 install jsonschema
        - pip3 install jsonref
        - pip3 install --pre selenium
        - pip3 install websocket_client
        - pip3 install pause
        - pip3 install paramiko
        - pip3 install psutil
        - pip3 install docker
        - CHROME_VERSION=$(google-chrome --version | egrep -o -e '[0-9]+\.[0-9]+\.[0-9]+')
        - CHROME_DRIVER_VERSION=$(curl -L https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION})
        - wget https://chromedriver.storage.googleapis.com/${CHROME_DRIVER_VERSION}/chromedriver_linux64.zip
        - unzip chromedriver_linux64.zip
        - sudo chmod u+x chromedriver
        - sudo mv chromedriver /usr/bin/
        - pushd ${TRAVIS_BUILD_DIR}/python_submitty_utils
        - pip3 install .
        - popd
        - wget https://github.com/validator/validator/releases/download/20.3.16/vnu.jar_20.3.16.zip
        - unzip vnu.jar_20.3.16.zip
        - sudo mv dist/vnu.jar /usr/bin/
      before_script:
        # Need to make this a full repo so that we can get the tag information
        # when we're installing
        - git fetch --unshallow
        - git fetch
        # Doing this helps chromedriver from hanging for some mysterious reason
        # https://github.com/SeleniumHQ/docker-selenium/issues/87
        - export DBUS_SESSION_BUS_ADDRESS=/dev/null
        - psql -U postgres -c "CREATE ROLE submitty_dbuser WITH SUPERUSER CREATEDB CREATEROLE LOGIN PASSWORD 'submitty_dbuser'"
        - PGPASSWORD=submitty_dbuser psql -d postgres -h localhost -U submitty_dbuser -c "CREATE DATABASE submitty"
        - sudo bash .setup/travis/autograder.sh
        - sudo bash .setup/travis/setup.sh
        - sudo python3 /usr/local/submitty/GIT_CHECKOUT/Submitty/.setup/bin/setup_sample_courses.py --no_submissions sample
        - sudo bash .setup/travis/setup_test_suite.sh
        - sudo a2enmod include rewrite actions cgi alias headers suexec authnz_external headers proxy_fcgi proxy_http proxy_wstunnel
        - echo "cgi.fix_pathinfo = 1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
        - cp .setup/php-fpm/pool.d/submitty.conf ~/.phpenv/versions/$(phpenv version-name)/etc/php-fpm.conf
        - sudo mkdir -p /run/php
        - sudo chown www-data:www-data /run/php
        - sudo chmod 755 /run/php
        - sudo ~/.phpenv/versions/$(phpenv version-name)/sbin/php-fpm
        - sudo a2dissite 000-default
        - sudo rm -rf /etc/apache2/sites-available/*
        - sudo rm -rf /etc/apache2/sites-enabled/*
        - sudo cp -f .setup/apache/submitty.conf /etc/apache2/sites-available/submitty.conf
        - sudo sed -e "s/Require host __your_domain__/Require all granted/g" --in-place /etc/apache2/sites-available/submitty.conf
        # - sudo sed '54d' --in-place /etc/apache2/sites-available/submitty.conf
        - sudo cp .setup/apache/www-data /etc/apache2/suexec/www-data
        - sudo chmod 0640 /etc/apache2/suexec/www-data
        - sudo a2ensite submitty
        - sudo bash -c 'echo "export PATH=$PATH" >> /etc/apache2/envvars'
        - cat /etc/apache2/sites-available/submitty.conf
        - sudo apache2ctl -t
        - sudo service apache2 restart
      script:
        - echo "Authentication Method => $(sudo jq -r ".authentication_method" /usr/local/submitty/config/database.json)"
        - TEST_URL="http://localhost" python3 -m unittest discover -v --start-directory tests
        - sudo sed -ie "s/Pam/Database/g" /usr/local/submitty/config/database.json
        - echo "Authentication Method => $(sudo jq -r ".authentication_method" /usr/local/submitty/config/database.json)"
        - pushd tests
        - TEST_URL="http://localhost" python3 -m unittest e2e.test_login
        - popd
        - SEMESTER=$(python3 -c 'from datetime import datetime; today = datetime.today(); semester = ("s" if today.month < 7 else "f") + str(today.year)[-2:]; print(semester)')
        - sudo python3 /usr/local/submitty/bin/generate_repos.py ${SEMESTER} sample open_homework
        - bash tests/git_test.sh
        - sudo bash tests/test_site_error_log.sh
        - sudo journalctl -u submitty_websocket_server
      before_cache:
        - sudo rm -rf ${HOME}/.composer/cache
        - sudo mv /home/submitty_php/.composer/cache ${HOME}/.composer
        - sudo chown -R ${USER}:${USER} ${HOME}/.composer/cache

notifications:
  email: false
  slack:
    secure: A/rJsHlznzryxJEvULY9C8kCB9x+9IrRSnIIOutEoptAOyxb44FP5Lenact0ipeJxJIbSL667C/5F2J+e78METDhQD1xlCTcUG3FoonSmnqTvj73edeR8YoMuRchLRsxw2bcdKA+bv0fKzS9bPzrXOJTykunprmKSDkDlNjFHaY=
